/* Copyright 2024-2025 Joachim Metz <joachim.metz@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may
 * obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/// EWF file header signature: "EVF\x09\x0d\x0a\xff\x00"
pub(super) const EWF_FILE_HEADER_SIGNATURE: [u8; 8] =
    [0x45, 0x56, 0x46, 0x09, 0x0d, 0x0a, 0xff, 0x00];

/// EWF data section type: "data\0\0\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_DATA: [u8; 16] = [
    0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF digest section type: "digest\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_DIGEST: [u8; 16] = [
    0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF disk section type: "disk\0\0\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_DISK: [u8; 16] = [
    0x64, 0x69, 0x73, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF done section type: "done\0\0\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_DONE: [u8; 16] = [
    0x64, 0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF error2 section type: "error2\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_ERROR2: [u8; 16] = [
    0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF hash section type: "hash\0\0\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_HASH: [u8; 16] = [
    0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF header section type: "header\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_HEADER: [u8; 16] = [
    0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF header2 section type: "header2\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_HEADER2: [u8; 16] = [
    0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

// TODO: ltree
// TODO: ltypes

/// EWF next section type: "next\0\0\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_NEXT: [u8; 16] = [
    0x6e, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF sectors section type: "sectors\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_SECTORS: [u8; 16] = [
    0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

// TODO: session

/// EWF table section type: "table\0\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_TABLE: [u8; 16] = [
    0x74, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF table section type: "table2\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_TABLE2: [u8; 16] = [
    0x74, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

/// EWF volume section type: "volume\0\0\0\0\0\0\0\0\0\0"
pub(super) const EWF_SECTION_TYPE_VOLUME: [u8; 16] = [
    0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

// TODO: xhash
// TODO: xheader
